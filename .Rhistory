Leland's R studio'
clear
clc
add2<-function(x,y){
x+y
}
add2(5,8)
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:20
n<-12
above(x,12)
above<-function(x,n=10){
use<-x>n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <-numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
y<-matrix(1:100,10,10)
columnmean(y)
y
library(swirl)
swirl()
TRUE==TRUE
(FALSE==TRUE) == FALSE
6==7
6<7
10<=1-
q
10<=10
5!=7
!(5!=7)
!(5==7)
FALSE & FALSE
TRUE & c(true,false,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
xor(4 >= 9, 8 != 8.0)
ints <- sample(10)
ints
ints>5
which(ints>5)
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submi()
submit()
boring_function('My first
| function!')
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8), )
evaluate(c(1.4,3.6,7.9,8.8), stderr )
evaluate(c(1.4,3.6,7.9,8.8),sd)
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},6)
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[length(x)]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("fuck this world ma")
submit()
submit()
madLibs(place="a", adjective="b", noun="c")
mad_ibs(place="a", adjective="b", noun="c")
mad_libs(place="a", adjective="b", noun="c")
submit()
submit()
"Good" %p% "job!"
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-asData("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
bye()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
set.seed(1)
rpois(5, 2)
?rnorm
?dnorm
?rnorm
?qpois
?rbinom
librar(swirl)
library(swirl)
swirl()
swirl()
swirl()
bye()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
bye()
swirl()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
letters
LEATERS
LETTERS
sample(LETTERS)
flips = sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace = TRUE,prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob
| = 0.7)
rbinom(1, size = 100, prob = 0.7)
?apply
?lapply
?replicate
flips2<-replicate(n,rbinom(1, size = 1, prob = 0.7))
flips2<-replicate(100,rbinom(1, size = 1, prob = 0.7))
flips2
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnomr
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plots(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
?plots
?plot
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mpg~cyl, data = mtcars)
hits(mtcars$mpg)
hist(mtcars$mpg)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
mdf <- read.csv(patch2csv,stringAsFactors = FALSE)
mdf <- read.csv(patch2csv,stringsAsFactors =  = FALSE)
mdf <- read.csv(patch2csv,stringsAsFactors = FALSE)
mdf <- read.csv(path2csv,stringsAsFactors = FALSE)
mdf <- read.csv(path2csv,stringsAsFactors = FALSE)
mdf <- read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
swirl()
swirl()
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(swirl)
swirl()
Sys.getlocale("LC_TIMe")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
now()
this_timew
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
ymd_hms("03:22:14")
hms("03:22:14")
dt2
ymd_hms(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(now())
this_moment <- update()
now()
Try update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
now(tzone = "America/New_York")
now(tzone = "America/New_York")
now("America/New_York")
ncy <- now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_King")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tzone = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- (arrive,last_time)
how_long <- interval(arrive,last_time)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("~/JHU_dataScience/datasciencoursera/getCleanData")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./quiz4_q1.csv", method = "curl")
library(data.table)
q1_df <- read.csv("quiz4_q1.csv")
strsplit(names(q1_df), split = "wgtp")
strsplit(names(q1_df), split = "wgtp")[123]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./quiz4_q2.csv", method = "curl")
q2_df <- read.csv("quiz4_q2.csv")
View(q2_df)
q2_df_clean <- gsub(",","",q2_df[,5])
mean(as.numeric(q2_df_clean[1:215]),na.rm = TRUE)
fileUrl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "./quiz4_q4_GDP.csv", method = "curl")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "./quiz4_q4_EDU.csv", method = "curl")
q4_GDP_df <- read.csv("quiz4_q4_GDP.csv")
q4_EDU_df <- read.csv("quiz4_q4_EDU.csv")
setnames(q4_GDP_df, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
q4_all_df <- merge(q4_GDP_df, q4_EDU_df, by = "CountryCode")
table(grepl("june", tolower(q4_all_df$Special.Notes)), grepl("fiscal year end", tolower(q4_all_df$Special.Notes)))[4]
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
length(grep("^2012",sampleTimes))
sum(weekdays(as.Date(sampleTimes[grep("^2012",sampleTimes)]))=="Monday")
setwd("~/JHU_dataScience/datasciencoursera/getCleanData/project")
test_y_df <- read.table("./UCI HAR Dataset/test/y_test.txt")
View(test_y_df)
train_y_df <- read.table("./UCI HAR Dataset/train/y_train.txt")
test_X_df <- read.table("./UCI HAR Dataset/test/X_test.txt")
View(test_X_df)
train_X_df <- read.table("./UCI HAR Dataset/train/X_train.txt")
vec <- c(1:100)
past("V",as.character(vec),sep = "")
paste("V",as.character(vec),sep = "")
str(test_X_df)
names(test_X_df)
features_df <- read.table("./UCI HAR Dataset/features.txt")
View(features_df)
features_df$V2
features_df$V2[1]
features_df <- read.table("./UCI HAR Dataset/features.txt", stringsAsFactors = FALSE)
features_df$V2
features_df$V2[1]
strsplit(features_df$V2[1], split = "-")
features_df <- mutate(features_df, varType = strsplit(V2, split = "-")[2])
library(dplyr)
features_df <- mutate(features_df, varType = strsplit(V2, split = "-")[2])
strsplit(features_df, split = "-")[2]
strsplit(features_df$V2, split = "-")[2]
strsplit(features_df$V2, split = "-")
strsplit(features_df$V2, split = "-")[1][2]
strsplit(features_df$V2, split = "-")[1]
vec <- strsplit(features_df$V2, split = "-")[1]
vec
vec[2]
vec[[2]]
vec[[1]]
vec[[1]][2]
lst <- strsplit(features_df$V2, split = "-")
lst
lst[[1]][2]
lst[2]
lst[[1:end]][2]
lst[[1:end]]
lst[[1:10]]
lst[[,]]
lst[[,1]]
View(features_df)
as.data.frame(lst)
lst[[c(1)]]
lst[[c(1,2)]]
lst[[c(1:10)]]
lst[[1][2]]
lst[[1],[2]]
lst[[1,2]]
lst[[1 2]]
str(lst)
lst[1]
lst[1:10]
lst[1:end]
lst[1:10][2]
lst[1:10]
sapply(lst[1:3], function(x) x[[2]])
varTypes <- sapply(lst[1:554] function(x) x[[2]])
varTypes <- sapply(lst[1:554], function(x) x[[2]])
varTypes
features_df <- mutate(features_df, varType = strsplit(V2, split = "-")[[2]])
mutate(features_df[1:3], varType = strsplit(V2, split = "-")[[2]])
features_df[1:3]
features_df[,1:3]
features_df[1:3,]
mutate(features_df[1:3,], varType = strsplit(V2, split = "-")[[2]])
mutate(features_df[1:3,], varType = strsplit(V2, split = "-")[2])
mutate(features_df[1:3,], varType = strsplit(V2, split = "-"))
mutate(features_df[1:3,], varType = strsplit(V2, split = "-")[[2]])
test <- mutate(features_df[1:3,], varType = strsplit(V2, split = "-")[[2]])
View(test)
test <- mutate(features_df[1:6,], varType = strsplit(V2, split = "-")[[2]])
lst <- strsplit(features_df$V2, split = c("-",","))
lst
lst <- strsplit(features_df$V2, split = c("-"))
lst
vec
varTypes[555:561] <- "0"
features_df$varTypes <- varTypes
filter(features_df, (varTypes == "mean()") | (varTypes == "std()") )
filterted_feat_df <- filter(features_df, (varTypes == "mean()") | (varTypes == "std()") )
feat_fltrd_df <- filter(features_df, (varTypes == "mean()") | (varTypes == "std()") )
View(test_X_df)
fltr_vec <- feat_fltrd_df$V1
View(feat_fltrd_df)
View(test_X_df)
fltrCols <- paste("V",as.character(filter_vec),sep = "")
fltrCols <- paste("V",as.character(fltr_vec),sep = "")
test_X_fltrd_df <- select(test_X_df, fltrCols)
fltrCols
test_X_fltrd_df <- select(test_X_df, fltr_vec)
View(test_X_fltrd_df)
train_X_fltrd_df <- select(train_X_df, fltr_vec)
View(train_y_df)
actLabels_df <- read.table("./UCI HAR Dataset/activity_labels.txt", stringsAsFactors = FALSE)
View(actLabels_df)
actLabels_vec <- actLabels_df$V2
View(test_y_df)
mutate(test_y_df, newCol = actLabels_vec[V1])
test_y_df <- mutate(test_y_df, activity = actLabels_vec[V1])
View(actLabels_df)
train_y_df <- mutate(train_y_df, activity = actLabels_vec[V1])
View(test_y_df)
View(test_y_df)
all_y_df <- rbind(test_y_df,train_y_df)
View(all_y_df)
all_X_df <- rbind(test_X_fltrd_df,train_X_fltrd_df)
View(all_X_df)
names(test_X_df)
test_sub_df <- read.table("./UCI HAR Dataset/test/subject_test.txt", stringsAsFactors = FALSE)
train_sub_df <- read.table("./UCI HAR Dataset/train/subject_train.txt", stringsAsFactors = FALSE)
all_sub_df <- rbind(test_sub_df,train_sub_df)
